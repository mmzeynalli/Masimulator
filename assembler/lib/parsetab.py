
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLUMN COMMA C_OPCODE IMMEDIATE LABEL NEWLINE OPCODE REGISTERprogram : statementprogram : LABEL COLUMN NEWLINEstatement : C_OPCODE register COMMA register NEWLINEstatement : C_OPCODE register COMMA IMMEDIATE NEWLINEstatement : OPCODE register COMMA register COMMA register NEWLINEstatement : OPCODE register COMMA register COMMA IMMEDIATE NEWLINEstatement : OPCODE register COMMA IMMEDIATE NEWLINEstatement : OPCODE register COMMA LABEL NEWLINEstatement : OPCODE register COMMA register COMMA LABEL NEWLINEregister : REGISTERstatement : NEWLINE'
    
_lr_action_items = {'LABEL':([0,13,21,],[3,18,26,]),'C_OPCODE':([0,],[5,]),'OPCODE':([0,],[6,]),'NEWLINE':([0,7,9,14,15,17,18,24,25,26,],[4,11,-10,19,20,22,23,27,28,29,]),'$end':([1,2,4,11,19,20,22,23,27,28,29,],[0,-1,-11,-2,-3,-4,-7,-8,-5,-6,-9,]),'COLUMN':([3,],[7,]),'REGISTER':([5,6,12,13,21,],[9,9,9,9,9,]),'COMMA':([8,9,10,16,],[12,-10,13,21,]),'IMMEDIATE':([12,13,21,],[15,17,25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,],[2,]),'register':([5,6,12,13,21,],[8,10,14,16,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program_statement','parser.py',37),
  ('program -> LABEL COLUMN NEWLINE','program',3,'p_program_label','parser.py',45),
  ('statement -> C_OPCODE register COMMA register NEWLINE','statement',5,'p_statement_CR','parser.py',56),
  ('statement -> C_OPCODE register COMMA IMMEDIATE NEWLINE','statement',5,'p_statement_CI','parser.py',69),
  ('statement -> OPCODE register COMMA register COMMA register NEWLINE','statement',7,'p_statement_R','parser.py',79),
  ('statement -> OPCODE register COMMA register COMMA IMMEDIATE NEWLINE','statement',7,'p_statement_I_S_SB','parser.py',93),
  ('statement -> OPCODE register COMMA IMMEDIATE NEWLINE','statement',5,'p_statement_U_UJ','parser.py',138),
  ('statement -> OPCODE register COMMA LABEL NEWLINE','statement',5,'p_statement_UJ_LABEL','parser.py',168),
  ('statement -> OPCODE register COMMA register COMMA LABEL NEWLINE','statement',7,'p_statement_SB__JALR_LABEL','parser.py',183),
  ('register -> REGISTER','register',1,'p_register','parser.py',208),
  ('statement -> NEWLINE','statement',1,'p_statement_none','parser.py',220),
]
